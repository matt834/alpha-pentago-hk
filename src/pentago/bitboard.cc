#include <cassert>
#include <string>
#include <iostream>

#include "bitboard.h"

namespace pen {

namespace {

const Move kMove[] = {
    "a1-1R", "a1-1L", "a1-2R", "a1-2L", "a1-3R", "a1-3L", "a1-4R", "a1-4L",
    "a2-1R", "a2-1L", "a2-2R", "a2-2L", "a2-3R", "a2-3L", "a2-4R", "a2-4L",
    "a3-1R", "a3-1L", "a3-2R", "a3-2L", "a3-3R", "a3-3L", "a3-4R", "a3-4L",
    "a4-1R", "a4-1L", "a4-2R", "a4-2L", "a4-3R", "a4-3L", "a4-4R", "a4-4L",
    "a5-1R", "a5-1L", "a5-2R", "a5-2L", "a5-3R", "a5-3L", "a5-4R", "a5-4L",
    "a6-1R", "a6-1L", "a6-2R", "a6-2L", "a6-3R", "a6-3L", "a6-4R", "a6-4L",
    "b1-1R", "b1-1L", "b1-2R", "b1-2L", "b1-3R", "b1-3L", "b1-4R", "b1-4L",
    "b2-1R", "b2-1L", "b2-2R", "b2-2L", "b2-3R", "b2-3L", "b2-4R", "b2-4L",
    "b3-1R", "b3-1L", "b3-2R", "b3-2L", "b3-3R", "b3-3L", "b3-4R", "b3-4L",
    "b4-1R", "b4-1L", "b4-2R", "b4-2L", "b4-3R", "b4-3L", "b4-4R", "b4-4L",
    "b5-1R", "b5-1L", "b5-2R", "b5-2L", "b5-3R", "b5-3L", "b5-4R", "b5-4L",
    "b6-1R", "b6-1L", "b6-2R", "b6-2L", "b6-3R", "b6-3L", "b6-4R", "b6-4L",
    "c1-1R", "c1-1L", "c1-2R", "c1-2L", "c1-3R", "c1-3L", "c1-4R", "c1-4L",
    "c2-1R", "c2-1L", "c2-2R", "c2-2L", "c2-3R", "c2-3L", "c2-4R", "c2-4L",
    "c3-1R", "c3-1L", "c3-2R", "c3-2L", "c3-3R", "c3-3L", "c3-4R", "c3-4L",
    "c4-1R", "c4-1L", "c4-2R", "c4-2L", "c4-3R", "c4-3L", "c4-4R", "c4-4L",
    "c5-1R", "c5-1L", "c5-2R", "c5-2L", "c5-3R", "c5-3L", "c5-4R", "c5-4L",
    "c6-1R", "c6-1L", "c6-2R", "c6-2L", "c6-3R", "c6-3L", "c6-4R", "c6-4L",
    "d1-1R", "d1-1L", "d1-2R", "d1-2L", "d1-3R", "d1-3L", "d1-4R", "d1-4L",
    "d2-1R", "d2-1L", "d2-2R", "d2-2L", "d2-3R", "d2-3L", "d2-4R", "d2-4L",
    "d3-1R", "d3-1L", "d3-2R", "d3-2L", "d3-3R", "d3-3L", "d3-4R", "d3-4L",
    "d4-1R", "d4-1L", "d4-2R", "d4-2L", "d4-3R", "d4-3L", "d4-4R", "d4-4L",
    "d5-1R", "d5-1L", "d5-2R", "d5-2L", "d5-3R", "d5-3L", "d5-4R", "d5-4L",
    "d6-1R", "d6-1L", "d6-2R", "d6-2L", "d6-3R", "d6-3L", "d6-4R", "d6-4L",
    "e1-1R", "e1-1L", "e1-2R", "e1-2L", "e1-3R", "e1-3L", "e1-4R", "e1-4L",
    "e2-1R", "e2-1L", "e2-2R", "e2-2L", "e2-3R", "e2-3L", "e2-4R", "e2-4L",
    "e3-1R", "e3-1L", "e3-2R", "e3-2L", "e3-3R", "e3-3L", "e3-4R", "e3-4L",
    "e4-1R", "e4-1L", "e4-2R", "e4-2L", "e4-3R", "e4-3L", "e4-4R", "e4-4L",
    "e5-1R", "e5-1L", "e5-2R", "e5-2L", "e5-3R", "e5-3L", "e5-4R", "e5-4L",
    "e6-1R", "e6-1L", "e6-2R", "e6-2L", "e6-3R", "e6-3L", "e6-4R", "e6-4L",
    "f1-1R", "f1-1L", "f1-2R", "f1-2L", "f1-3R", "f1-3L", "f1-4R", "f1-4L",
    "f2-1R", "f2-1L", "f2-2R", "f2-2L", "f2-3R", "f2-3L", "f2-4R", "f2-4L",
    "f3-1R", "f3-1L", "f3-2R", "f3-2L", "f3-3R", "f3-3L", "f3-4R", "f3-4L",
    "f4-1R", "f4-1L", "f4-2R", "f4-2L", "f4-3R", "f4-3L", "f4-4R", "f4-4L",
    "f5-1R", "f5-1L", "f5-2R", "f5-2L", "f5-3R", "f5-3L", "f5-4R", "f5-4L",
    "f6-1R", "f6-1L", "f6-2R", "f6-2L", "f6-3R", "f6-3L", "f6-4R", "f6-4L"};

}

}

int main(void) {
    pen::BitBoard board = pen::BitBoard();


    int foo[8][5] = {
        {0, 7, 14, 21, 28},
        {7, 14, 21, 28, 35},
        {5, 10, 15, 20, 25},
        {10, 15, 20, 25, 30},

        {6, 13, 20, 27, 34},
        {1, 8, 15, 22, 29},

        {4, 9, 14, 19, 24},
        {11, 16, 21, 26, 31}
    };

    for (int i = 0; i < 8; i++) {
        board.set(foo[i][0]);
        board.set(foo[i][1]);
        board.set(foo[i][2]);
        board.set(foo[i][3]);
        board.set(foo[i][4]);

        printf("0x%016llX\n", board.as_int());
        board.clear();
    }
}
